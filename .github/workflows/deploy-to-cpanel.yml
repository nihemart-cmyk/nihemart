name: CI/CD — Build and deploy to cPanel

on:
  push:
    branches: [main]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CPANEL_FTP_HOST: ${{ secrets.CPANEL_FTP_HOST }}
      CPANEL_FTP_USERNAME: ${{ secrets.CPANEL_FTP_USERNAME }}
      CPANEL_FTP_PASSWORD: ${{ secrets.CPANEL_FTP_PASSWORD }}
      CPANEL_FTP_PATH: ${{ secrets.CPANEL_FTP_PATH }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies (npm)
        run: |
          if [ -f package-lock.json ]; then
            npm ci --no-fund --no-audit
          else
            npm install --no-fund --no-audit
          fi

      - name: Build
        env:
          NODE_ENV: production
        run: npm run build --if-present

      - name: Prepare export (static) if needed
        run: |
          # Exporting as static if the project supports next export
          if [ "${NEXT_EXPORT}" = "true" ]; then
            echo "NEXT_EXPORT=true — running next export"
            npx next export -o out || true
          else
            echo "NEXT_EXPORT not true — skipping next export"
          fi

      - name: Prepare deploy directory (dist or out)
        id: prepare
        run: |
          set -e
          DEPLOY_DIR=""
          if [ -d out ]; then 
            DEPLOY_DIR=out
          else
            echo "Creating dist folder for Node deployment"
            rm -rf dist || true
            mkdir -p dist
            # copy build artifact and public assets
            cp -r .next dist/ || true
            cp -r public dist/ || true
            # include server file and package.json so cPanel can run npm install
            cp package.json dist/ || true
            if [ -f server.js ]; then cp server.js dist/; fi
            # copy next.config.js if present
            if [ -f next.config.js ]; then cp next.config.js dist/; fi
            DEPLOY_DIR=dist
          fi
          echo "deploy_dir=${DEPLOY_DIR}" >> $GITHUB_OUTPUT

      - name: Show deploy dir contents
        run: |
          echo "Deploying from: ${{ steps.prepare.outputs.deploy_dir }}"
          ls -la "${{ steps.prepare.outputs.deploy_dir }}" || true

      - name: Deploy via FTP to cPanel (using lftp)
        if: env.CPANEL_FTP_HOST != '' && env.CPANEL_FTP_USERNAME != '' && env.CPANEL_FTP_PASSWORD != ''
        run: |
          set -e
          echo "Deploying from: ./${{ steps.prepare.outputs.deploy_dir }} to ${CPANEL_FTP_HOST}:${CPANEL_FTP_PATH}"
          sudo apt-get update -y
          sudo apt-get install -y lftp
          LDIR="./${{ steps.prepare.outputs.deploy_dir }}"
          REMOTE_DIR="${CPANEL_FTP_PATH}"
          # Use lftp to mirror the local directory to the remote path (reverse mirror)
          lftp -u "${CPANEL_FTP_USERNAME}","${CPANEL_FTP_PASSWORD}" "${CPANEL_FTP_HOST}" -e "mirror -R --parallel=5 --delete --verbose '${LDIR}' '${REMOTE_DIR}'; bye"
